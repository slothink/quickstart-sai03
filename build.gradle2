group 'world.sai.misc.quickstart'
version '1.0.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'war'
apply from: 'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'
apply plugin: 'org.flywaydb.flyway'
apply plugin: "coffeescript-base"


buildscript {
    repositories {
        mavenCentral()
        maven {
            url "http://repo.gradle.org/gradle/repo"
        }
    }
    dependencies {
        classpath 'com.h2database:h2:1.3.170'
        classpath 'org.flywaydb:flyway-gradle-plugin:3.2.1'
        classpath 'mysql:mysql-connector-java:5.1.6'
    }

}

allprojects {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url "http://repo.gradle.org/gradle/repo"
    }
    maven { url "http://repo.spring.io/release" }


}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile 'org.hibernate:hibernate-core:4.3.10.Final'
    compile 'org.hibernate:hibernate-entitymanager:4.3.10.Final'

    compile group: 'org.springframework', name: 'spring-core', version: '4.1.7.RELEASE'
    compile group: 'org.springframework', name: 'spring-context', version: '4.1.7.RELEASE'
    compile group: 'org.springframework', name: 'spring-context-support', version: '4.1.7.RELEASE'
    compile group: 'org.springframework', name: 'spring-beans', version: '4.1.7.RELEASE'

    compile group: 'org.springframework', name: 'spring-web', version: '4.1.7.RELEASE'
    compile group: 'org.springframework', name: 'spring-webmvc', version: '4.1.7.RELEASE'

    testCompile 'org.springframework:spring-test:4.1.7.RELEASE'
    compile 'org.springframework.data:spring-data-jpa:1.8.2.RELEASE'
    compile 'org.springframework.security:spring-security-web:4.0.1.RELEASE'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.5.8'
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    compile group: 'javax.servlet', name: 'jstl', version: '1.2'
    runtime 'mysql:mysql-connector-java:5.1.6'
    compile group: 'commons-dbcp', name: 'commons-dbcp', version: '1.2.2'
    compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.2.1'


//    compile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.9'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.3.0'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.3.0'

    compile group: 'org.apache.tiles', name: 'tiles-extras', version: '3.0.5'
    compile group: 'org.apache.tiles', name: 'tiles-servlet', version: '3.0.5'
    compile group: 'org.apache.tiles', name: 'tiles-jsp', version: '3.0.5'

}

configurations.all {
    resolutionStrategy {
        // 동일 모듈에 대한 버전 충돌시 즉시 오류 발생하고 실패.
//        failOnVersionConflict()
        force 'org.slf4j:slf4j-api:1.7.12', 'org.slf4j:jcl-over-slf4j:1.7.12', 'com.google.guava:guava:12.0.1', 'commons-collections:commons-collections:3.2.1'
    }
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'org.springframework') {
            details.useVersion '4.1.7.RELEASE'
        }
    }
}

flyway {
    url = 'jdbc:mysql://localhost:3306/misc_sai_03'
    user = 'misc_sai_03'
    password = 'asdf1234'
}

task makeCreateDatabaseUserSql << {
    println "CREATE DATABASE misc_sai_03 CHARACTER SET utf8 COLLATE utf8_general_ci;\n" +
            "CREATE USER 'misc_sai_03'@'localhost' IDENTIFIED BY 'asdf1234';\n" +
            "CREATE USER 'misc_sai_03'@'%' IDENTIFIED BY 'asdf1234';\n" +
            "GRANT ALL ON misc_sai_03.* to 'misc_sai_03'@'localhost';\n" +
            "GRANT ALL ON misc_sai_03.* to 'misc_sai_03';"

}

task allDeps << {
    println "All Dependencies:"
    allprojects.each { p ->
        println()
        println " $p.name ".center( 60, '*' )
        println()
        p.configurations.all.findAll { !it.allDependencies.empty }.each { c ->
            println " ${c.name} ".center( 60, '-' )
            c.allDependencies.each { dep ->
                println "$dep.group:$dep.name:$dep.version"
            }
            println "-" * 60
        }
    }
}



def coffeeScriptDestinationDir = 'src/main/webapp/asset/js'

task compileCoffee(type: CoffeeScriptCompile) {
    coffeeScriptJs = 'src/main/coffeescript-compiler/coffee-script.js' // CoffeeScriptCompiler
    destinationDir = coffeeScriptDestinationDir
    source = fileTree('src/main/coffeescript') // *.coffee 스크립트의 위치
}

clean {
    delete coffeeScriptDestinationDir // clean Task시 컴파일된 js 삭제
}